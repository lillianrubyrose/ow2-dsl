@file:Suppress("unused", "PropertyName")

package pm.lily.ow2

import org.objectweb.asm.Handle
import org.objectweb.asm.Opcodes
import org.objectweb.asm.tree.*

class Builder {
    val list = InsnList()

    operator fun AbstractInsnNode.unaryPlus() = list.add(this)

    val nop get() = +InsnNode(Opcodes.NOP)
    val aconst_null get() = +InsnNode(Opcodes.ACONST_NULL)
    val iconst_m1 get() = +InsnNode(Opcodes.ICONST_M1)
    val iconst_0 get() = +InsnNode(Opcodes.ICONST_0)
    val iconst_1 get() = +InsnNode(Opcodes.ICONST_1)
    val iconst_2 get() = +InsnNode(Opcodes.ICONST_2)
    val iconst_3 get() = +InsnNode(Opcodes.ICONST_3)
    val iconst_4 get() = +InsnNode(Opcodes.ICONST_4)
    val iconst_5 get() = +InsnNode(Opcodes.ICONST_5)
    val lconst_0 get() = +InsnNode(Opcodes.LCONST_0)
    val lconst_1 get() = +InsnNode(Opcodes.LCONST_1)
    val fconst_0 get() = +InsnNode(Opcodes.FCONST_0)
    val fconst_1 get() = +InsnNode(Opcodes.FCONST_1)
    val fconst_2 get() = +InsnNode(Opcodes.FCONST_2)
    val dconst_0 get() = +InsnNode(Opcodes.DCONST_0)
    val dconst_1 get() = +InsnNode(Opcodes.DCONST_1)
    val bipush get() = +InsnNode(Opcodes.BIPUSH)
    val sipush get() = +InsnNode(Opcodes.SIPUSH)
    val ldc get() = +InsnNode(Opcodes.LDC)
    val iload get() = +InsnNode(Opcodes.ILOAD)
    val lload get() = +InsnNode(Opcodes.LLOAD)
    val fload get() = +InsnNode(Opcodes.FLOAD)
    val dload get() = +InsnNode(Opcodes.DLOAD)
    val aload get() = +InsnNode(Opcodes.ALOAD)
    val iaload get() = +InsnNode(Opcodes.IALOAD)
    val laload get() = +InsnNode(Opcodes.LALOAD)
    val faload get() = +InsnNode(Opcodes.FALOAD)
    val daload get() = +InsnNode(Opcodes.DALOAD)
    val aaload get() = +InsnNode(Opcodes.AALOAD)
    val baload get() = +InsnNode(Opcodes.BALOAD)
    val caload get() = +InsnNode(Opcodes.CALOAD)
    val saload get() = +InsnNode(Opcodes.SALOAD)
    val istore get() = +InsnNode(Opcodes.ISTORE)
    val lstore get() = +InsnNode(Opcodes.LSTORE)
    val fstore get() = +InsnNode(Opcodes.FSTORE)
    val dstore get() = +InsnNode(Opcodes.DSTORE)
    val astore get() = +InsnNode(Opcodes.ASTORE)
    val iastore get() = +InsnNode(Opcodes.IASTORE)
    val lastore get() = +InsnNode(Opcodes.LASTORE)
    val fastore get() = +InsnNode(Opcodes.FASTORE)
    val dastore get() = +InsnNode(Opcodes.DASTORE)
    val aastore get() = +InsnNode(Opcodes.AASTORE)
    val bastore get() = +InsnNode(Opcodes.BASTORE)
    val castore get() = +InsnNode(Opcodes.CASTORE)
    val sastore get() = +InsnNode(Opcodes.SASTORE)
    val pop get() = +InsnNode(Opcodes.POP)
    val pop2 get() = +InsnNode(Opcodes.POP2)
    val dup get() = +InsnNode(Opcodes.DUP)
    val dup_x1 get() = +InsnNode(Opcodes.DUP_X1)
    val dup_x2 get() = +InsnNode(Opcodes.DUP_X2)
    val dup2 get() = +InsnNode(Opcodes.DUP2)
    val dup2_x1 get() = +InsnNode(Opcodes.DUP2_X1)
    val dup2_x2 get() = +InsnNode(Opcodes.DUP2_X2)
    val swap get() = +InsnNode(Opcodes.SWAP)
    val iadd get() = +InsnNode(Opcodes.IADD)
    val ladd get() = +InsnNode(Opcodes.LADD)
    val fadd get() = +InsnNode(Opcodes.FADD)
    val dadd get() = +InsnNode(Opcodes.DADD)
    val isub get() = +InsnNode(Opcodes.ISUB)
    val lsub get() = +InsnNode(Opcodes.LSUB)
    val fsub get() = +InsnNode(Opcodes.FSUB)
    val dsub get() = +InsnNode(Opcodes.DSUB)
    val imul get() = +InsnNode(Opcodes.IMUL)
    val lmul get() = +InsnNode(Opcodes.LMUL)
    val fmul get() = +InsnNode(Opcodes.FMUL)
    val dmul get() = +InsnNode(Opcodes.DMUL)
    val idiv get() = +InsnNode(Opcodes.IDIV)
    val ldiv get() = +InsnNode(Opcodes.LDIV)
    val fdiv get() = +InsnNode(Opcodes.FDIV)
    val ddiv get() = +InsnNode(Opcodes.DDIV)
    val irem get() = +InsnNode(Opcodes.IREM)
    val lrem get() = +InsnNode(Opcodes.LREM)
    val frem get() = +InsnNode(Opcodes.FREM)
    val drem get() = +InsnNode(Opcodes.DREM)
    val ineg get() = +InsnNode(Opcodes.INEG)
    val lneg get() = +InsnNode(Opcodes.LNEG)
    val fneg get() = +InsnNode(Opcodes.FNEG)
    val dneg get() = +InsnNode(Opcodes.DNEG)
    val ishl get() = +InsnNode(Opcodes.ISHL)
    val lshl get() = +InsnNode(Opcodes.LSHL)
    val ishr get() = +InsnNode(Opcodes.ISHR)
    val lshr get() = +InsnNode(Opcodes.LSHR)
    val iushr get() = +InsnNode(Opcodes.IUSHR)
    val lushr get() = +InsnNode(Opcodes.LUSHR)
    val iand get() = +InsnNode(Opcodes.IAND)
    val land get() = +InsnNode(Opcodes.LAND)
    val ior get() = +InsnNode(Opcodes.IOR)
    val lor get() = +InsnNode(Opcodes.LOR)
    val ixor get() = +InsnNode(Opcodes.IXOR)
    val lxor get() = +InsnNode(Opcodes.LXOR)
    val iinc get() = +InsnNode(Opcodes.IINC)
    val i2l get() = +InsnNode(Opcodes.I2L)
    val i2f get() = +InsnNode(Opcodes.I2F)
    val i2d get() = +InsnNode(Opcodes.I2D)
    val l2i get() = +InsnNode(Opcodes.L2I)
    val l2f get() = +InsnNode(Opcodes.L2F)
    val l2d get() = +InsnNode(Opcodes.L2D)
    val f2i get() = +InsnNode(Opcodes.F2I)
    val f2l get() = +InsnNode(Opcodes.F2L)
    val f2d get() = +InsnNode(Opcodes.F2D)
    val d2i get() = +InsnNode(Opcodes.D2I)
    val d2l get() = +InsnNode(Opcodes.D2L)
    val d2f get() = +InsnNode(Opcodes.D2F)
    val i2b get() = +InsnNode(Opcodes.I2B)
    val i2c get() = +InsnNode(Opcodes.I2C)
    val i2s get() = +InsnNode(Opcodes.I2S)
    val lcmp get() = +InsnNode(Opcodes.LCMP)
    val fcmpl get() = +InsnNode(Opcodes.FCMPL)
    val fcmpg get() = +InsnNode(Opcodes.FCMPG)
    val dcmpl get() = +InsnNode(Opcodes.DCMPL)
    val dcmpg get() = +InsnNode(Opcodes.DCMPG)
    val ifeq get() = +InsnNode(Opcodes.IFEQ)
    val ifne get() = +InsnNode(Opcodes.IFNE)
    val iflt get() = +InsnNode(Opcodes.IFLT)
    val ifge get() = +InsnNode(Opcodes.IFGE)
    val ifgt get() = +InsnNode(Opcodes.IFGT)
    val ifle get() = +InsnNode(Opcodes.IFLE)
    val if_icmpeq get() = +InsnNode(Opcodes.IF_ICMPEQ)
    val if_icmpne get() = +InsnNode(Opcodes.IF_ICMPNE)
    val if_icmplt get() = +InsnNode(Opcodes.IF_ICMPLT)
    val if_icmpge get() = +InsnNode(Opcodes.IF_ICMPGE)
    val if_icmpgt get() = +InsnNode(Opcodes.IF_ICMPGT)
    val if_icmple get() = +InsnNode(Opcodes.IF_ICMPLE)
    val if_acmpeq get() = +InsnNode(Opcodes.IF_ACMPEQ)
    val if_acmpne get() = +InsnNode(Opcodes.IF_ACMPNE)
    val goto get() = +InsnNode(Opcodes.GOTO)
    val jsr get() = +InsnNode(Opcodes.JSR)
    val ret get() = +InsnNode(Opcodes.RET)
    val tableswitch get() = +InsnNode(Opcodes.TABLESWITCH)
    val lookupswitch get() = +InsnNode(Opcodes.LOOKUPSWITCH)
    val ireturn get() = +InsnNode(Opcodes.IRETURN)
    val lreturn get() = +InsnNode(Opcodes.LRETURN)
    val freturn get() = +InsnNode(Opcodes.FRETURN)
    val dreturn get() = +InsnNode(Opcodes.DRETURN)
    val areturn get() = +InsnNode(Opcodes.ARETURN)
    val return_ get() = +InsnNode(Opcodes.RETURN)
    val getstatic get() = +InsnNode(Opcodes.GETSTATIC)
    val putstatic get() = +InsnNode(Opcodes.PUTSTATIC)
    val getfield get() = +InsnNode(Opcodes.GETFIELD)
    val putfield get() = +InsnNode(Opcodes.PUTFIELD)
    val invokevirtual get() = +InsnNode(Opcodes.INVOKEVIRTUAL)
    val invokespecial get() = +InsnNode(Opcodes.INVOKESPECIAL)
    val invokestatic get() = +InsnNode(Opcodes.INVOKESTATIC)
    val invokeinterface get() = +InsnNode(Opcodes.INVOKEINTERFACE)
    val invokedynamic get() = +InsnNode(Opcodes.INVOKEDYNAMIC)
    val new get() = +InsnNode(Opcodes.NEW)
    val newarray get() = +InsnNode(Opcodes.NEWARRAY)
    val anewarray get() = +InsnNode(Opcodes.ANEWARRAY)
    val arraylength get() = +InsnNode(Opcodes.ARRAYLENGTH)
    val athrow get() = +InsnNode(Opcodes.ATHROW)
    val checkcast get() = +InsnNode(Opcodes.CHECKCAST)
    val instanceof get() = +InsnNode(Opcodes.INSTANCEOF)
    val monitorenter get() = +InsnNode(Opcodes.MONITORENTER)
    val monitorexit get() = +InsnNode(Opcodes.MONITOREXIT)
    val multianewarray get() = +InsnNode(Opcodes.MULTIANEWARRAY)
    val ifnull get() = +InsnNode(Opcodes.IFNULL)
    val ifnonnull get() = +InsnNode(Opcodes.IFNONNULL)

    fun getStatic(owner: String, name: String, desc: String) = +FieldInsnNode(Opcodes.GETSTATIC, owner, name, desc)
    fun putStatic(owner: String, name: String, desc: String) = +FieldInsnNode(Opcodes.PUTSTATIC, owner, name, desc)
    fun getField(owner: String, name: String, desc: String) = +FieldInsnNode(Opcodes.GETFIELD, owner, name, desc)
    fun putField(owner: String, name: String, desc: String) = +FieldInsnNode(Opcodes.PUTFIELD, owner, name, desc)

    fun invokeVirtual(owner: String, name: String, desc: String) =
        +MethodInsnNode(Opcodes.INVOKEVIRTUAL, owner, name, desc)

    fun invokeSpecial(owner: String, name: String, desc: String) =
        +MethodInsnNode(Opcodes.INVOKESPECIAL, owner, name, desc)

    fun invokeStatic(owner: String, name: String, desc: String) =
        +MethodInsnNode(Opcodes.INVOKESTATIC, owner, name, desc)

    fun invokeInterface(owner: String, name: String, desc: String) =
        +MethodInsnNode(Opcodes.INVOKEINTERFACE, owner, name, desc)

    fun invokeDynamic(name: String, desc: String, handle: Handle, vararg args: Any) =
        +InvokeDynamicInsnNode(name, desc, handle, *args)

    fun new(type: String) = +TypeInsnNode(Opcodes.NEW, type)
    fun checkCast(type: String) = +TypeInsnNode(Opcodes.CHECKCAST, type)
    fun instanceof(type: String) = +TypeInsnNode(Opcodes.INSTANCEOF, type)

    fun iload(value: Int) = +VarInsnNode(Opcodes.ILOAD, value)
    fun lload(value: Int) = +VarInsnNode(Opcodes.LLOAD, value)
    fun fload(value: Int) = +VarInsnNode(Opcodes.FLOAD, value)
    fun dload(value: Int) = +VarInsnNode(Opcodes.DLOAD, value)
    fun aload(value: Int) = +VarInsnNode(Opcodes.ALOAD, value)
    fun istore(value: Int) = +VarInsnNode(Opcodes.ISTORE, value)
    fun lstore(value: Int) = +VarInsnNode(Opcodes.LSTORE, value)
    fun fstore(value: Int) = +VarInsnNode(Opcodes.FSTORE, value)
    fun dstore(value: Int) = +VarInsnNode(Opcodes.DSTORE, value)
    fun astore(value: Int) = +VarInsnNode(Opcodes.ASTORE, value)
}

fun insnList(block: Builder.() -> Unit): InsnList = Builder().apply {
    block(this)
}.list
